TYPE
  LOGLEVEL : (CRITICAL, WARNING, INFO, DEBUG) := INFO;
END_TYPE

FUNCTION_BLOCK LOGGER
  VAR_INPUT
    TRIG : BOOL;
    MSG : STRING;
    LEVEL : LOGLEVEL := INFO;
  END_VAR
  VAR
    TRIG0 : BOOL;
  END_VAR

  IF TRIG AND NOT TRIG0 THEN
  {{
   LogMessage(GetFbVar(LEVEL),(char*)GetFbVar(MSG, .body),GetFbVar(MSG, .len));
  }}
  END_IF;
  TRIG0:=TRIG;
END_FUNCTION_BLOCK


PROGRAM rd_seq_rbear_trap
  VAR
    START : BOOL;
    PANIC : BOOL;
    Er : BOOL;
    SET_TRAP : BOOL;
    ACTIVATE_TRAP : BOOL;
    IN_MINUTOS : INT := 2;
    IN_SEGUNDOS : INT := 30;
    TIMER : INT;
    C_TIMER : INT;
    D_TIMER : INT;
    DISPLAY_M : INT;
    DISPLAY_S : INT;
    RANDOM : INT;
    RANDOM_ULINT : ULINT;
    SEED : ULINT := 0;
  END_VAR
  VAR CONSTANT
    M10 : ULINT := 10000;
    A : ULINT := 32310901;
    C : ULINT := 32310901;
    M : ULINT := 4294967296;
  END_VAR
  VAR
    Clock : BOOL;
    TOF0 : TOF;
    TON0 : TON;
    CTU_ULINT0 : CTU_ULINT;
    RESET : BOOL;
    D1 : INT;
    D2 : INT;
    D3 : INT;
    D4 : INT;
    CTU0 : CTU;
    R_TRIG1 : R_TRIG;
    CTU1 : CTU;
    TOF1 : TOF;
    CTU2 : CTU;
    TOF2 : TOF;
    CTU3 : CTU;
    TOF3 : TOF;
    CTU4 : CTU;
    TOF4 : TOF;
    B1 : BOOL;
    B2 : BOOL;
    B3 : BOOL;
    B4 : BOOL;
    M1 : BOOL;
    M2 : BOOL;
    M3 : BOOL;
    M4 : BOOL;
    E1 : BOOL;
    E2 : BOOL;
    E3 : BOOL;
    E4 : BOOL;
    R1 : BOOL;
    R2 : BOOL;
    R3 : BOOL;
    R4 : BOOL;
    G0 : BOOL;
    G1 : BOOL;
    G2 : BOOL;
    G3 : BOOL;
    G4 : BOOL;
    O1 : BOOL;
    O2 : BOOL;
    O3 : BOOL;
    O4 : BOOL;
    RELEASE_TRAP : BOOL;
    R_TRIG2 : R_TRIG;
    R_TRIG3 : R_TRIG;
    R_TRIG0 : R_TRIG;
    R_TRIG4 : R_TRIG;
    _TMP_MOD35_ENO : BOOL;
    _TMP_MOD35_OUT : INT;
    _TMP_DIV39_ENO : BOOL;
    _TMP_DIV39_OUT : INT;
    _TMP_MOD16_ENO : BOOL;
    _TMP_MOD16_OUT : INT;
    _TMP_DIV54_ENO : BOOL;
    _TMP_DIV54_OUT : INT;
    _TMP_MOD21_ENO : BOOL;
    _TMP_MOD21_OUT : INT;
    _TMP_DIV20_ENO : BOOL;
    _TMP_DIV20_OUT : INT;
    _TMP_MOD19_ENO : BOOL;
    _TMP_MOD19_OUT : INT;
    R_TRIG5 : R_TRIG;
    _TMP_MUL1_ENO : BOOL;
    _TMP_MUL1_OUT : ULINT;
    _TMP_ADD5_ENO : BOOL;
    _TMP_ADD5_OUT : ULINT;
    _TMP_MOD7_ENO : BOOL;
    _TMP_MOD7_OUT : ULINT;
    _TMP_MOD9_ENO : BOOL;
    _TMP_MOD9_OUT : ULINT;
    R_TRIG6 : R_TRIG;
    R_TRIG7 : R_TRIG;
    R_TRIG8 : R_TRIG;
    R_TRIG9 : R_TRIG;
    _TMP_EQ121_ENO : BOOL;
    _TMP_EQ121_OUT : BOOL;
    _TMP_EQ117_ENO : BOOL;
    _TMP_EQ117_OUT : BOOL;
    _TMP_EQ130_ENO : BOOL;
    _TMP_EQ130_OUT : BOOL;
    _TMP_EQ134_ENO : BOOL;
    _TMP_EQ134_OUT : BOOL;
    _TMP_ULINT_TO_INT231_ENO : BOOL;
    _TMP_ULINT_TO_INT231_OUT : INT;
    _TMP_MUL17_ENO : BOOL;
    _TMP_MUL17_OUT : INT;
    _TMP_ADD14_ENO : BOOL;
    _TMP_ADD14_OUT : INT;
    _TMP_SUB43_ENO : BOOL;
    _TMP_SUB43_OUT : INT;
    _TMP_MOD245_ENO : BOOL;
    _TMP_MOD245_OUT : INT;
    _TMP_DIV249_ENO : BOOL;
    _TMP_DIV249_OUT : INT;
    _TMP_SUB253_ENO : BOOL;
    _TMP_SUB253_OUT : INT;
  END_VAR

  TON0(IN := NOT(Clock), PT := T#500ms);
  TOF0(IN := TON0.Q, PT := T#500ms);
  Clock := TOF0.Q;
  R_TRIG4(CLK := NOT(Clock));
  CTU_ULINT0(CU := R_TRIG4.Q, R := RESET, PV := 9999);
  SEED := CTU_ULINT0.CV;
  RESET := CTU_ULINT0.Q;
  _TMP_MOD35_OUT := MOD(EN := TRUE, IN1 := RANDOM, IN2 := 10, ENO => _TMP_MOD35_ENO);
  IF _TMP_MOD35_ENO THEN
      D4 := _TMP_MOD35_OUT;
  END_IF;
  _TMP_DIV39_OUT := DIV(EN := _TMP_MOD35_ENO, IN1 := RANDOM, IN2 := 10, ENO => _TMP_DIV39_ENO);
  _TMP_MOD16_OUT := MOD(EN := _TMP_DIV39_ENO, IN1 := _TMP_DIV39_OUT, IN2 := 10, ENO => _TMP_MOD16_ENO);
  IF _TMP_MOD16_ENO THEN
      D3 := _TMP_MOD16_OUT;
  END_IF;
  _TMP_DIV54_OUT := DIV(EN := TRUE, IN1 := RANDOM, IN2 := 100, ENO => _TMP_DIV54_ENO);
  _TMP_MOD21_OUT := MOD(EN := _TMP_DIV54_ENO, IN1 := _TMP_DIV54_OUT, IN2 := 10, ENO => _TMP_MOD21_ENO);
  IF _TMP_MOD21_ENO THEN
      D2 := _TMP_MOD21_OUT;
  END_IF;
  _TMP_DIV20_OUT := DIV(EN := _TMP_MOD21_ENO, IN1 := RANDOM, IN2 := 1000, ENO => _TMP_DIV20_ENO);
  _TMP_MOD19_OUT := MOD(EN := _TMP_DIV20_ENO, IN1 := _TMP_DIV20_OUT, IN2 := 10, ENO => _TMP_MOD19_ENO);
  IF _TMP_MOD19_ENO THEN
      D1 := _TMP_MOD19_OUT;
  END_IF;
  R_TRIG5(CLK := SET_TRAP AND NOT(Clock));
  CTU0(CU := R_TRIG5.Q, PV := TIMER);
  ACTIVATE_TRAP := NOT(RELEASE_TRAP) AND CTU0.Q;
  R_TRIG1(CLK := SET_TRAP);
  R_TRIG2(CLK := Er);
  _TMP_MUL1_OUT := MUL(EN := R_TRIG1.Q OR R_TRIG2.Q, IN1 := SEED, IN2 := A, ENO => _TMP_MUL1_ENO);
  _TMP_ADD5_OUT := ADD(EN := _TMP_MUL1_ENO, IN1 := _TMP_MUL1_OUT, IN2 := C, ENO => _TMP_ADD5_ENO);
  _TMP_MOD7_OUT := MOD(EN := _TMP_ADD5_ENO, IN1 := _TMP_ADD5_OUT, IN2 := M, ENO => _TMP_MOD7_ENO);
  _TMP_MOD9_OUT := MOD(EN := _TMP_MOD7_ENO, IN1 := _TMP_MOD7_OUT, IN2 := M10, ENO => _TMP_MOD9_ENO);
  IF _TMP_MOD9_ENO THEN
      RANDOM_ULINT := _TMP_MOD9_OUT;
  END_IF;
  R_TRIG6(CLK := B1 AND NOT(G0));
  CTU1(CU := R_TRIG6.Q, R := Er, PV := D1);
  M1 := CTU1.Q;
  R1 := E1 AND B1 AND NOT(G0);
  TOF1(IN := M1 AND NOT(B1), PT := T#1s);
  E1 := TOF1.Q;
  R_TRIG7(CLK := B2 AND NOT(G0));
  CTU2(CU := R_TRIG7.Q, R := Er, PV := D2);
  M2 := CTU2.Q;
  R2 := E2 AND B2 AND NOT(G0);
  TOF2(IN := M2 AND NOT(B2), PT := T#1s);
  E2 := TOF2.Q;
  R_TRIG8(CLK := B3 AND NOT(G0));
  CTU3(CU := R_TRIG8.Q, R := Er, PV := D3);
  M3 := CTU3.Q;
  R3 := E3 AND B3 AND NOT(G0);
  TOF3(IN := M3 AND NOT(B3), PT := T#1s);
  E3 := TOF3.Q;
  R_TRIG9(CLK := B4 AND NOT(G0));
  CTU4(CU := R_TRIG9.Q, R := Er, PV := D4);
  M4 := CTU4.Q;
  R4 := E4 AND B4 AND NOT(G0);
  TOF4(IN := M4 AND NOT(B4), PT := T#1s);
  E4 := TOF4.Q;
  G0 := B2 AND B1 OR B3 AND B1 OR B3 AND B2 OR B3 AND B2 AND B1 OR B4 AND B1 OR B4 AND B2 OR B4 AND B3 OR B4 AND B3 AND B1 OR B4 AND B3 AND B2 OR B4 AND B3 AND B4 AND B3 OR B4 AND B2 AND B1;
  O1 := NOT(G2) AND M2 AND B1 OR NOT(G3) AND M3 AND B1 OR NOT(G4) AND M4 AND B1;
  O2 := NOT(G1) AND NOT(M1) AND B2 OR NOT(G3) AND M3 AND B2 OR NOT(G4) AND M4 AND B2;
  O3 := NOT(G1) AND NOT(M1) AND B3 OR NOT(G2) AND NOT(M2) AND B3 OR NOT(G4) AND M4 AND B3;
  O4 := NOT(G1) AND NOT(M1) AND B4 OR NOT(G2) AND NOT(M2) AND B4 OR NOT(G3) AND NOT(M3) AND B4;
  _TMP_EQ121_OUT := EQ(EN := TRUE, IN1 := D1, IN2 := 0, ENO => _TMP_EQ121_ENO);
  G1 := _TMP_EQ121_OUT;
  _TMP_EQ117_OUT := EQ(EN := TRUE, IN1 := D2, IN2 := 0, ENO => _TMP_EQ117_ENO);
  G2 := _TMP_EQ117_OUT;
  _TMP_EQ130_OUT := EQ(EN := TRUE, IN1 := D3, IN2 := 0, ENO => _TMP_EQ130_ENO);
  G3 := _TMP_EQ130_OUT;
  _TMP_EQ134_OUT := EQ(EN := TRUE, IN1 := D4, IN2 := 0, ENO => _TMP_EQ134_ENO);
  G4 := _TMP_EQ134_OUT;
  Er := G0 OR O1 OR O2 OR O3 OR O4 OR R1 OR R2 OR R3 OR R4;
  RELEASE_TRAP := RELEASE_TRAP OR M4 AND M3 AND M2 AND M1 AND NOT(ACTIVATE_TRAP) AND SET_TRAP;
  _TMP_ULINT_TO_INT231_OUT := ULINT_TO_INT(EN := TRUE, IN := RANDOM_ULINT, ENO => _TMP_ULINT_TO_INT231_ENO);
  IF _TMP_ULINT_TO_INT231_ENO THEN
      RANDOM := _TMP_ULINT_TO_INT231_OUT;
  END_IF;
  SET_TRAP := NOT(PANIC) AND (SET_TRAP OR START);
  PANIC := PANIC;
  R_TRIG3(CLK := SET_TRAP);
  _TMP_MUL17_OUT := MUL(EN := R_TRIG3.Q, IN1 := IN_MINUTOS, IN2 := 60, ENO => _TMP_MUL17_ENO);
  _TMP_ADD14_OUT := ADD(EN := _TMP_MUL17_ENO, IN1 := _TMP_MUL17_OUT, IN2 := IN_SEGUNDOS, ENO => _TMP_ADD14_ENO);
  IF _TMP_ADD14_ENO THEN
      TIMER := _TMP_ADD14_OUT;
  END_IF;
  R_TRIG0(CLK := Er);
  _TMP_SUB43_OUT := SUB(EN := R_TRIG0.Q, IN1 := TIMER, IN2 := 10, ENO => _TMP_SUB43_ENO);
  IF _TMP_SUB43_ENO THEN
      TIMER := _TMP_SUB43_OUT;
  END_IF;
  C_TIMER := CTU0.CV;
  _TMP_MOD245_OUT := MOD(EN := TRUE, IN1 := D_TIMER, IN2 := 60, ENO => _TMP_MOD245_ENO);
  IF _TMP_MOD245_ENO THEN
      DISPLAY_S := _TMP_MOD245_OUT;
  END_IF;
  _TMP_DIV249_OUT := DIV(EN := TRUE, IN1 := D_TIMER, IN2 := 60, ENO => _TMP_DIV249_ENO);
  IF _TMP_DIV249_ENO THEN
      DISPLAY_M := _TMP_DIV249_OUT;
  END_IF;
  _TMP_SUB253_OUT := SUB(EN := TRUE, IN1 := TIMER, IN2 := C_TIMER, ENO => _TMP_SUB253_ENO);
  IF _TMP_SUB253_ENO THEN
      D_TIMER := _TMP_SUB253_OUT;
  END_IF;
END_PROGRAM

PROGRAM my_clock_counter
  VAR
    Clock : BOOL;
    Clock0 : BOOL;
    DISPLAY : ULINT;
    TON0 : TON;
    TOF0 : TOF;
    CTU_ULINT0 : CTU_ULINT;
    Reset : BOOL;
    R_TRIG1 : R_TRIG;
  END_VAR

  TON0(IN := NOT(Clock), PT := T#1s);
  TOF0(EN := TON0.ENO, IN := TON0.Q, PT := T#1s);
  Clock := TOF0.Q;
  R_TRIG1(CLK := NOT(Clock));
  CTU_ULINT0(CU := R_TRIG1.Q, R := Reset, PV := 10);
  DISPLAY := CTU_ULINT0.CV;
  Reset := CTU_ULINT0.Q;
END_PROGRAM

PROGRAM digit_extractor
  VAR
    RANDOM : ULINT := 1234;
    DIVISOR : ULINT := 10;
  END_VAR
  VAR RETAIN
    D1 : ULINT;
  END_VAR
  VAR
    D2 : ULINT;
    D3 : ULINT;
    D4 : ULINT;
    M1 : BOOL;
    _TMP_MOD35_ENO : BOOL;
    _TMP_MOD35_OUT : ULINT;
    _TMP_DIV39_ENO : BOOL;
    _TMP_DIV39_OUT : ULINT;
    _TMP_MOD1_ENO : BOOL;
    _TMP_MOD1_OUT : ULINT;
    _TMP_DIV54_ENO : BOOL;
    _TMP_DIV54_OUT : ULINT;
    _TMP_MOD6_ENO : BOOL;
    _TMP_MOD6_OUT : ULINT;
    _TMP_DIV5_ENO : BOOL;
    _TMP_DIV5_OUT : ULINT;
    _TMP_MOD2_ENO : BOOL;
    _TMP_MOD2_OUT : ULINT;
  END_VAR

  _TMP_MOD35_OUT := MOD(EN := TRUE, IN1 := RANDOM, IN2 := 10, ENO => _TMP_MOD35_ENO);
  IF _TMP_MOD35_ENO THEN
      D4 := _TMP_MOD35_OUT;
  END_IF;
  _TMP_DIV39_OUT := DIV(EN := _TMP_MOD35_ENO, IN1 := RANDOM, IN2 := 10, ENO => _TMP_DIV39_ENO);
  _TMP_MOD1_OUT := MOD(EN := _TMP_DIV39_ENO, IN1 := _TMP_DIV39_OUT, IN2 := 10, ENO => _TMP_MOD1_ENO);
  IF _TMP_MOD1_ENO THEN
      D3 := _TMP_MOD1_OUT;
  END_IF;
  _TMP_DIV54_OUT := DIV(EN := TRUE, IN1 := RANDOM, IN2 := 100, ENO => _TMP_DIV54_ENO);
  _TMP_MOD6_OUT := MOD(EN := _TMP_DIV54_ENO, IN1 := _TMP_DIV54_OUT, IN2 := 10, ENO => _TMP_MOD6_ENO);
  IF _TMP_MOD6_ENO THEN
      D2 := _TMP_MOD6_OUT;
  END_IF;
  _TMP_DIV5_OUT := DIV(EN := _TMP_MOD6_ENO, IN1 := RANDOM, IN2 := 1000, ENO => _TMP_DIV5_ENO);
  _TMP_MOD2_OUT := MOD(EN := _TMP_DIV5_ENO, IN1 := _TMP_DIV5_OUT, IN2 := 10, ENO => _TMP_MOD2_ENO);
  IF _TMP_MOD2_ENO THEN
      D1 := _TMP_MOD2_OUT;
  END_IF;
END_PROGRAM

PROGRAM puzzle
  VAR
    D1 : INT := 1;
    D2 : INT := 2;
    D3 : INT := 3;
    D4 : INT := 0;
    B1 : BOOL;
    B2 : BOOL;
    B3 : BOOL;
    B4 : BOOL;
    M1 : BOOL;
    M2 : BOOL;
    M3 : BOOL;
    M4 : BOOL;
    E1 : BOOL;
    E2 : BOOL;
    E3 : BOOL;
    E4 : BOOL;
    CTU1 : CTU;
    R1 : BOOL;
    R2 : BOOL;
    R3 : BOOL;
    R4 : BOOL;
    G1 : BOOL;
    G2 : BOOL;
    G3 : BOOL;
    G4 : BOOL;
    G0 : BOOL;
    O1 : BOOL;
    O2 : BOOL;
    O3 : BOOL;
    O4 : BOOL;
    Er : BOOL;
    SAFE : BOOL;
    CTU2 : CTU;
    CTU3 : CTU;
    CTU4 : CTU;
    R_TRIG1 : R_TRIG;
    R_TRIG2 : R_TRIG;
    R_TRIG3 : R_TRIG;
    R_TRIG4 : R_TRIG;
    _TMP_EQ121_ENO : BOOL;
    _TMP_EQ121_OUT : BOOL;
    _TMP_EQ117_ENO : BOOL;
    _TMP_EQ117_OUT : BOOL;
    _TMP_EQ130_ENO : BOOL;
    _TMP_EQ130_OUT : BOOL;
    _TMP_EQ134_ENO : BOOL;
    _TMP_EQ134_OUT : BOOL;
  END_VAR

  R_TRIG1(CLK := B1 AND NOT(G0));
  CTU1(CU := R_TRIG1.Q, R := Er, PV := D1);
  M1 := CTU1.Q;
  R1 := E1 AND B1 AND NOT(G0);
  G0 := B2 AND B1 OR B3 AND B1 OR B3 AND B2 OR B3 AND B2 AND B1 OR B4 AND B1 OR B4 AND B2 OR B4 AND B3 OR B4 AND B3 AND B4 AND B3 OR B4 AND B2 AND B1 OR B4 AND B3 AND B1 OR B4 AND B3 AND B2;
  O1 := NOT(G2) AND M2 AND B1 OR NOT(G3) AND M3 AND B1 OR NOT(G4) AND M4 AND B1;
  R_TRIG2(CLK := B2 AND NOT(G0));
  CTU2(CU := R_TRIG2.Q, R := Er, PV := D2);
  M2 := CTU2.Q;
  R2 := E2 AND B2 AND NOT(G0);
  E2 := M2 AND NOT(B2);
  R_TRIG3(CLK := B3 AND NOT(G0));
  CTU3(CU := R_TRIG3.Q, R := Er, PV := D3);
  M3 := CTU3.Q;
  R3 := E3 AND B3 AND NOT(G0);
  E3 := M3 AND NOT(B3);
  R_TRIG4(CLK := B4 AND NOT(G0));
  CTU4(CU := R_TRIG4.Q, R := Er, PV := D4);
  M4 := CTU4.Q;
  R4 := E4 AND B4 AND NOT(G0);
  E4 := M4 AND NOT(B4);
  O2 := NOT(G1) AND NOT(M1) AND B2 OR NOT(G3) AND M3 AND B2 OR NOT(G4) AND M4 AND B2;
  O3 := NOT(G1) AND NOT(M1) AND B3 OR NOT(G2) AND NOT(M2) AND B3 OR NOT(G4) AND M4 AND B3;
  O4 := NOT(G1) AND NOT(M1) AND B4 OR NOT(G2) AND NOT(M2) AND B4 OR NOT(G3) AND NOT(M3) AND B4;
  E1 := M1 AND NOT(B1);
  _TMP_EQ121_OUT := EQ(EN := TRUE, IN1 := D1, IN2 := 0, ENO => _TMP_EQ121_ENO);
  G1 := _TMP_EQ121_OUT;
  _TMP_EQ117_OUT := EQ(EN := TRUE, IN1 := D2, IN2 := 0, ENO => _TMP_EQ117_ENO);
  G2 := _TMP_EQ117_OUT;
  _TMP_EQ130_OUT := EQ(EN := TRUE, IN1 := D3, IN2 := 0, ENO => _TMP_EQ130_ENO);
  G3 := _TMP_EQ130_OUT;
  _TMP_EQ134_OUT := EQ(EN := TRUE, IN1 := D4, IN2 := 0, ENO => _TMP_EQ134_ENO);
  G4 := _TMP_EQ134_OUT;
  Er := G0 OR O1 OR O2 OR O3 OR O4 OR R1 OR R2 OR R3 OR R4;
  SAFE := M4 AND M3 AND M2 AND M1;
END_PROGRAM

PROGRAM sub_timer
  VAR
    Er : BOOL;
    START : BOOL;
    PANIC : BOOL;
    IN_MINUTOS : INT := 3;
    IN_SEGUNDOS : INT := 10;
    R_SEGUNDOS : BOOL;
    DISPLAY_M : INT;
    DISPLAY_S : INT;
    Clock : BOOL;
    I_TIMER : INT;
    TIMER : INT;
    C_TIMER : INT;
    D_TIMER : INT;
    TOF0 : TOF;
    TON0 : TON;
    SET_TRAP : BOOL;
    ACTIVATE_TRAP : BOOL;
    CTU0 : CTU;
    R_TRIG0 : R_TRIG;
    R_TRIG1 : R_TRIG;
    R_TRIG2 : R_TRIG;
    _TMP_MOD70_ENO : BOOL;
    _TMP_MOD70_OUT : INT;
    _TMP_DIV1_ENO : BOOL;
    _TMP_DIV1_OUT : INT;
    _TMP_MUL86_ENO : BOOL;
    _TMP_MUL86_OUT : INT;
    _TMP_ADD89_ENO : BOOL;
    _TMP_ADD89_OUT : INT;
    _TMP_SUB99_ENO : BOOL;
    _TMP_SUB99_OUT : INT;
    _TMP_SUB43_ENO : BOOL;
    _TMP_SUB43_OUT : INT;
  END_VAR

  TON0(IN := NOT(Clock), PT := T#500ms);
  TOF0(EN := TON0.ENO, IN := TON0.Q, PT := T#500ms);
  Clock := TOF0.Q;
  R_TRIG2(CLK := SET_TRAP AND NOT(Clock));
  CTU0(CU := R_TRIG2.Q, PV := TIMER);
  ACTIVATE_TRAP := CTU0.Q;
  SET_TRAP := NOT(PANIC) AND (SET_TRAP OR START);
  _TMP_MOD70_OUT := MOD(EN := TRUE, IN1 := D_TIMER, IN2 := 60, ENO => _TMP_MOD70_ENO);
  IF _TMP_MOD70_ENO THEN
      DISPLAY_S := _TMP_MOD70_OUT;
  END_IF;
  _TMP_DIV1_OUT := DIV(EN := TRUE, IN1 := D_TIMER, IN2 := 60, ENO => _TMP_DIV1_ENO);
  IF _TMP_DIV1_ENO THEN
      DISPLAY_M := _TMP_DIV1_OUT;
  END_IF;
  R_TRIG1(CLK := SET_TRAP);
  _TMP_MUL86_OUT := MUL(EN := R_TRIG1.Q, IN1 := IN_MINUTOS, IN2 := 60, ENO => _TMP_MUL86_ENO);
  _TMP_ADD89_OUT := ADD(EN := _TMP_MUL86_ENO, IN1 := _TMP_MUL86_OUT, IN2 := IN_SEGUNDOS, ENO => _TMP_ADD89_ENO);
  IF _TMP_ADD89_ENO THEN
      TIMER := _TMP_ADD89_OUT;
  END_IF;
  C_TIMER := CTU0.CV;
  _TMP_SUB99_OUT := SUB(EN := TRUE, IN1 := TIMER, IN2 := C_TIMER, ENO => _TMP_SUB99_ENO);
  IF _TMP_SUB99_ENO THEN
      D_TIMER := _TMP_SUB99_OUT;
  END_IF;
  R_TRIG0(CLK := Er);
  _TMP_SUB43_OUT := SUB(EN := R_TRIG0.Q, IN1 := TIMER, IN2 := 10, ENO => _TMP_SUB43_ENO);
  IF _TMP_SUB43_ENO THEN
      TIMER := _TMP_SUB43_OUT;
  END_IF;
  PANIC := PANIC;
END_PROGRAM

PROGRAM linear_congruential_generator
  VAR
    R_TRIG1 : R_TRIG;
    R_TRIG2 : R_TRIG;
    TOF0 : TOF;
    TON0 : TON;
    CTU_ULINT0 : CTU_ULINT;
    SET_TRAP : BOOL;
    Er : BOOL;
    SEED : ULINT;
    A : ULINT;
    C : ULINT;
    M : ULINT;
    M10 : ULINT;
    RANDOM_ULINT : ULINT;
    RANDOM : INT;
    RESET : BOOL;
    Clock : BOOL;
    _TMP_MUL1_ENO : BOOL;
    _TMP_MUL1_OUT : ULINT;
    _TMP_ADD5_ENO : BOOL;
    _TMP_ADD5_OUT : ULINT;
    _TMP_MOD7_ENO : BOOL;
    _TMP_MOD7_OUT : ULINT;
    _TMP_MOD9_ENO : BOOL;
    _TMP_MOD9_OUT : ULINT;
    _TMP_ULINT_TO_INT231_ENO : BOOL;
    _TMP_ULINT_TO_INT231_OUT : INT;
    R_TRIG3 : R_TRIG;
  END_VAR

  R_TRIG1(CLK := SET_TRAP);
  R_TRIG2(CLK := Er);
  _TMP_MUL1_OUT := MUL(EN := R_TRIG1.Q OR R_TRIG2.Q, IN1 := SEED, IN2 := A, ENO => _TMP_MUL1_ENO);
  _TMP_ADD5_OUT := ADD(EN := _TMP_MUL1_ENO, IN1 := _TMP_MUL1_OUT, IN2 := C, ENO => _TMP_ADD5_ENO);
  _TMP_MOD7_OUT := MOD(EN := _TMP_ADD5_ENO, IN1 := _TMP_ADD5_OUT, IN2 := M, ENO => _TMP_MOD7_ENO);
  _TMP_MOD9_OUT := MOD(EN := _TMP_MOD7_ENO, IN1 := _TMP_MOD7_OUT, IN2 := M10, ENO => _TMP_MOD9_ENO);
  IF _TMP_MOD9_ENO THEN
      RANDOM_ULINT := _TMP_MOD9_OUT;
  END_IF;
  _TMP_ULINT_TO_INT231_OUT := ULINT_TO_INT(IN := RANDOM_ULINT, ENO => _TMP_ULINT_TO_INT231_ENO);
  RANDOM := _TMP_ULINT_TO_INT231_OUT;
  TON0(IN := NOT(Clock), PT := T#500ms);
  TOF0(IN := TON0.Q, PT := T#500ms);
  Clock := TOF0.Q;
  R_TRIG3(CLK := NOT(Clock));
  CTU_ULINT0(CU := R_TRIG3.Q, R := RESET, PV := 9999);
  RESET := CTU_ULINT0.Q;
  SEED := CTU_ULINT0.CV;
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    TASK task1(INTERVAL := T#1s,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : rd_seq_rbear_trap;
    PROGRAM instance1 WITH task0 : my_clock_counter;
    PROGRAM instance2 WITH task0 : digit_extractor;
    PROGRAM instance3 WITH task0 : puzzle;
    PROGRAM instance4 WITH task0 : sub_timer;
  END_RESOURCE
END_CONFIGURATION
